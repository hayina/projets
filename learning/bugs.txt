validation !!!!!!!!!!!!
kayan li ytvalida f new w f edit non -> projet form validaion
auto complete si ya du text sans selection il raise not error !!! aparament it's okey :)


quand ya pas de scroll popup bug decalage !!!!

- delarative vs imperative

- il faut absolute path f imports !!!!

- kill other ajax calls after onChange autocomplete
is it good to just ignore them in success as i did ???

- where to call next in a middleware ?
- how to set state in reducers ? one bye one or all in one like { ...state, p1, p2, p3, ... }

- changing axios beacuase why
no abort system
if error is discard in sucess then it will be executed by catch


---------------
--- where putting the initial state (hooks) ?? the difference ??

const STATE = {
    suggestions: [],
    ....
}

const AutoComplete = ({ autocomplete, dispatch, reduxForm }) => {
const STATE = {
    suggestions: [],
    ....
}
...
------------------------------------

state = { foo: ... } => state.foo= ... NO!!! => { ...state, foo: ... } OK
state = { foo: { ... }, ... } => const newState = { ...state }, newState[foo]= ... ?? YES or NO ??

-------
considering this approch for modals
https://stackoverflow.com/questions/35623656/

-------
need more comprehension
const inputEl = useRef(null);

-------------
splice & slice & split ....


-------- prevent rendereing parent form case when onChange


-- a verifier checkbox et select pour validation dirty et touched

prototype ??

issue with many submitting !!!

not reaload whole page hot reload after ctrl+s


formValues.os.push(formValues.osStart[0]) -> updating UI ?? so why setState or using redux reducer !!!

AM I USING THUNK !!!!!!!! :)

dispatch(clearFields(marcheFormName, true, false, fieldName)) -> ask in stackoverflow

--------------
const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))

const asyncValidate = (values /*, dispatch */) => {
  return sleep(1000).then(() => {
    // simulate server latency
    if (['john', 'paul', 'george', 'ringo'].includes(values.username)) {
      throw { username: 'That username is taken' }
    }
  })
}
--------------